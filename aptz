#!/bin/bash
echo ""
echo "                  APT-Eazy                   "
echo "[ ========================================= ]"
echo "|                                           |"
echo "| Coded By : Black.Hacker                   |"
echo "| Version  : 2.0 Stable [ 2019 Edition ]    |"
echo "| CodeName : Its2019                        |"
echo "|                                           |"
echo "|           Dark Software Company           |"
echo "[ ========================================= ]"

function CheckUpdate {
currentversion="2.0.Stable"

if [ -f "Version.txt" ]
then
    rm "Version.txt"
    wget https://raw.githubusercontent.com/BlackHacker511/Apt-Eazy/master/Version.txt --quiet
else
    wget https://raw.githubusercontent.com/BlackHacker511/Apt-Eazy/master/Version.txt --quiet
fi

newversion=`cat Version.txt`
sleep 5

if [ $currentversion == $newversion ]; then
echo  "No Update available."
else 
echo "[-] Update available"
echo ""
wget https://raw.githubusercontent.com/BlackHacker511/Apt-Eazy/master/Changelogs.txt --quiet
cat "Changelogs.txt"
echo ""
echo "[1] Update Now"
echo "[2] Go Back"
read -p "[-] Operation Number :" i


if [ $i -eq 1 ]; then
git pull origin master
fi

if [ $i -eq 2 ]; then
 Back
fi

fi
}

function StartProject {
echo ""
echo "Select an operation :"
echo " [1] Add a PPA"
echo " [2] Remove a PPA"
echo " [3] Update your APT Repository"
echo " [4] Upgrade your system"
echo " [5] Install a Software"
echo " [6] Remove a Software"
echo " [7] Install Themes"
echo ""
echo " [09] About"
echo " [99] Check for update"
echo " [0] Exit"
echo ""
read -p " [-] Operation Number : " i

if [ $i -eq 1 ]; then
 read -p " -PPA : " i2
 sudo add-apt-repository $i2 
 Back
fi

if [ $i -eq 2 ]; then
 read -p " -PPA : " i2
 sudo add-apt-repository -r $i2 
 Back
fi

if [ $i -eq 3 ]; then
 sudo apt-get update
 Back
fi

if [ $i -eq 4 ]; then
 sudo apt-get upgrade
 Back
fi

if [ $i -eq 5 ]; then
 echo ""
 echo " [1] Populer Software"
 echo " [2] By Name"
 echo ""
 read -p " [-] Operation Number : " a1
 
if [ $a1 -eq 1 ]; then
  echo ""
  echo " [1] Gimp [ Last Stable Update ]"
  echo " [2] VLC"
  echo " [3] Skype"
  echo " [4] Dropbox"
  echo " [5] Google Chrome"
  echo " [6] LibreOffice [ Last Update ]"
  echo " [7] Stacer [ Ubuntu System Cleaner ]"
  echo " [8] uGet [ Internet Download Manager for Linux ]"
  echo " [9] Shuuter"
  echo " [10] YouTube DL [ YouTube Downloader ]"
  echo " [11] Deluge [ Last Update - Torrent Clinet for Linux]"
  echo " [12] Sublime Text Editor"
  echo " [13] Spotify"
  echo " [14] Blue Griffon [ Last Update ][x64]"
  echo ""
  read -p " [-] Software Number : " i3
  
  if [ $i3 -eq 1 ]; then
   sudo add-apt-repository ppa:otto-kesselgulasch/gimp && sudo apt-get update && sudo apt-get install gimp
  fi
  
  if [ $i3 -eq 2 ]; then
   sudo apt-get install vlc
  fi
   
  if [ $i3 -eq 3 ]; then
   sudo wget https://go.skype.com/skypeforlinux-64.deb
   sudo dpkg -i skypeforlinux*
  fi
  
  if [ $i3 -eq 4 ]; then
   i7=`uname -m`
   amd64=x86_64
  if [ $i7 == "x86_64" ]; then
  sudo wget https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2019.02.14_amd64.deb
   dpkg -i dropbox*
   else
   sudo wget https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2019.02.14_i386.deb
   sudo dpkg -i dropbox*
   fi
  fi
  
    if [ $i3 -eq 5 ]; then
     i7=`uname -m`
     amd64=x86_64
    if [ $i7 == "x86_64" ]; then
     sudo wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    sudo dpkg -i google-chrome-unstable*
   else
     echo " -Error : No Google Chrome for 32bit"
   fi
  fi
  
  if [ $i3 -eq 6 ]; then
   sudo add-apt-repository ppa:libreoffice/ppa && sudo apt-get update && sudo apt-get install libreoffice
  fi
  
  
   if [ $i3 -eq 7 ]; then
      sudo add-apt-repository ppa:plushuang-tw/uget-stable && sudo apt update && sudo apt install uget
  fi
  
  if [ $i3 -eq 8 ]; then
  sudo apt-get install shutter
  fi
  
  if [ $i3 -eq 9 ]; then
  sudo add-apt-repository ppa:nilarimogard/webupd8
  sudo apt update
  sudo apt install youtube-dlg
  fi
  
  if [ $i3 -eq 10 ]; then
  sudo add-apt-repository ppa:deluge-team/ppa
  sudo apt-get update
  sudo apt-get install deluge
  fi
  
  if [ $i3 -eq 11 ]; then
  wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
  echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
  sudo apt-get update
  sudo apt-get install sublime-text
  fi
  
  if [ $i3 -eq 12 ]; then
  sudo sh -c 'echo "deb http://repository.spotify.com/ stable non-free" > /etc/apt/sources.list.d/spotify.list'
  sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 94558F59
  sudo apt-get update
  sudo apt-get install spotify-client
  fi
  
  if [ $i3 -eq 13 ]; then
  sudo add-apt-repository ppa:ubuntuhandbook1/audacity
  sudo apt update
  sudo apt install audacity
  fi

  if [ $i3 -eq 14 ]; then
  sudo wget "http://bluegriffon.org/freshmeat/3.0.1/bluegriffon-3.0.1.Ubuntu16.04-x86_64.deb"
  sudo dpkg -i bluegriffon-*
  fi

fi

if [ $a1 -eq 2 ]; then
 read -p "[-] Software Name : " i4
 sudo apt-get install $i4
fi

Back
fi

if [ $i -eq 6 ]; then
 dpkg -l
 echo ""
 read -p "[-] Software Name : " i2
 sudo apt-get remove --purge $i2 && sudo apt-get autoremove
 Back
fi

if [ $i -eq 7 ]; then
echo " [-] Be aware this script have more then 30 themes do you want to install it ?"
echo " [1] Yes."
echo " [2] No. "
read -p " [-] Operation Number : " i24

if [ $i24 -eq 1 ]; then
git clone https://github.com/tliron/install-gnome-themes ~/install-gnome-themes
cd ~/install-gnome-themes
./install-gnome-themes
Back
fi


fi




if [ $i -eq 09 ]; then
  echo "[ Apt Eazy ]"
  echo "This Tool Has Every Program and Command a New Linux User Need to Enjoy The Linux Experience."
  echo "-Version   : 1.5.0 Stable [ Pycho Mint ]"
  echo "-CodeName  : AptGoPsycho"
  echo "-Coded By  : Black.Hacker"
  echo "-Owened By : Dark Software Company"
  echo "Â© 2017 Dark Software All Rights Reserved."
  echo "-This Tool is Not for Sell."
  Back
  fi


if [ $i -eq 0 ]; then
 echo ""
 echo "[-] Good Luck (:"
 exit
fi

if [ $i -eq 99 ]; then
  echo ""
 CheckUpdate
 Back
fi
}


function Back {
	StartProject
}

function CheckPackage {
PKG_OK=$(dpkg-query -W --showformat='${Status}\n' software-properties-common|grep "install ok installed")
PKG_OK1=$(dpkg-query -W --showformat='${Status}\n' apt-transport-https|grep "install ok installed")
PKG_OK2=$(dpkg-query -W --showformat='${Status}\n' git|grep "install ok installed")
if [ "" == "$PKG_OK" ]; then
 sudo apt-get install software-properties-common --yes
 sudo apt-get install python-software-properties --yes
fi

if [ "" == "$PKG_OK1" ]; then
sudo apt-get install apt-transport-https --yes
fi

if [ "" == "$PKG_OK2" ]; then
sudo apt-get git--yes
fi
}

CheckPackage
sleep 1
StartProject
